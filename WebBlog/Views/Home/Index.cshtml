﻿<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Welcome to Blog Website</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
   <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            color: #333;
            overflow-x: hidden;
        }
        #container { 
            position: relative; 
            width: 100%;
            height: calc(100vh - 200px); 
            overflow: hidden; 
            display: flex; 
            justify-content: center;
            align-items: center; 
        }

        #info { 
            position: absolute; 
            bottom: 10px; 
            right: 10px; 
            font-size: 12px; 
        }

        .welcome-section {
            text-align: center;
            background-color: silver;
            padding: 80px 20px;
            color: white;
            font-family: Arial, sans-serif;
            font-size: 24px;
            line-height: 1.5;
        }

        h1 {
            font-size: 3em;
            margin-bottom: 20px; /* Increased margin */
            color: white;
        }

        p {
            font-size: 1.2em;
            margin-bottom: 40px; /* Increased margin */
            color: #666;
        }

        .introduction-section {
            padding: 50px 20px;
            background-color: #f8f9fa; /* Changed background color */
        }

        .introduction-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .services-section {
            padding: 50px 20px;
            background-color: #f9f9f9;
        }

        .service-item {
            text-align: center;
            margin-bottom: 30px;
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .service-item h3 {
                font-size: 1.5em;
                margin-bottom: 20px; /* Increased margin */
                color: #007bff;
            }

            .service-item p {
                font-size: 1.1em;
                color: #555;
            }

        #info {
            position: fixed;
            bottom: 10px;
            right: 10px;
            font-size: 12px;
            color: #777;
            z-index: 999;
        }

            #info a {
                color: #007bff;
            }
    </style>
</head>
<body>
    <div class="welcome-section">
        <h1>Welcome to Blog website</h1>
    </div>

    <div id="container"></div>

    <div class="container introduction-section">
        <div class="introduction-content">
            <h2>Introduction</h2>
            <p>Unveiling My Proficiencies, Skills, and Strengths - A Comprehensive Exploration of Who I Am and What I Bring to the Table</p>
        </div>
    </div>
    <div class="container services-section">
        <div class="row">
            <div class="col-md-4">
                <div class="service-item">
                    <h3>Service 1</h3>
                    <p>Welcome to my personal blog, where I invite you to delve into the depths of my thoughts and experiences. Here, I aim to provide you with a glimpse into my world, sharing stories, insights, and reflections that may resonate with you on a personal level. Through this platform, I hope to connect with readers on a deeper level, fostering a sense of camaraderie and understanding.</p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="service-item">
                    <h3>Service 2</h3>
                    <p>In addition to sharing my own experiences, I'm also a firm believer in the importance of community and collaboration. That's why I encourage you not only to read but also to engage with the content by leaving comments, sharing your own perspectives, and joining the conversation. After all, a blog is not just a monologue; it's a dialogue—a dynamic exchange of ideas and insights that enriches both the writer and the reader.</p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="service-item">
                    <h3>Service 3</h3>
                    <p>Speaking of community, one of the core principles of this blog is to foster a friendly and inclusive environment. Toxic behavior has no place here. Instead, I envision this space as a sanctuary where everyone feels welcomed, respected, and valued. Whether you're a seasoned blogger or a newcomer, whether you agree or disagree with the content, I invite you to participate in constructive dialogue and cultivate a culture of mutual support and encouragement.</p>
                </div>
            </div>
        </div>
    </div>

    <div id="info">
        <a href="https://threejs.org" target="_blank" rel="noopener">three.js</a> webgl - animation - keyframes<br>
        Model: <a href="https://artstation.com/artwork/1AGwX" target="_blank" rel="noopener">Littlest Tokyo</a> by
        <a href="https://artstation.com/glenatron" target="_blank" rel="noopener">Glen Fox</a>, CC Attribution.
    </div>

    <script type="importmap">
        {
            "imports": {
                "three": "../build/three.module.js",
                "three/addons/": "./jsm/"
            }
        }
    </script>

    <script type="module">
        import * as THREE from 'three';

        import Stats from 'three/addons/libs/stats.module.js';

        import { OrbitControls } from 'three/addons/controls/OrbitControls.js';
        import { RoomEnvironment } from 'three/addons/environments/RoomEnvironment.js';

        import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';
        import { DRACOLoader } from 'three/addons/loaders/DRACOLoader.js';

        let mixer;

        const clock = new THREE.Clock();
        const container = document.getElementById('container');

        const stats = new Stats();
        container.appendChild(stats.dom);

        const renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(window.innerWidth, window.innerHeight);
        container.appendChild(renderer.domElement);

        const pmremGenerator = new THREE.PMREMGenerator(renderer);

        const scene = new THREE.Scene();
        scene.background = new THREE.Color(0xf0f0f0);
        scene.environment = pmremGenerator.fromScene(new RoomEnvironment(renderer), 0.04).texture;

        const camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 100);
        camera.position.set(5, 5, 10);

        const controls = new OrbitControls(camera, renderer.domElement);
        controls.target.set(0, 0.5, 0);
        controls.update();
        controls.enablePan = false;
        controls.enableDamping = true;

        const dracoLoader = new DRACOLoader();
        dracoLoader.setDecoderPath('jsm/libs/draco/gltf/');

        const loader = new GLTFLoader();
        loader.setDRACOLoader(dracoLoader);
        loader.load('models/gltf/LittlestTokyo.glb', function (gltf) {

            const model = gltf.scene;
            model.position.set(0, 1, 0);
            model.scale.set(0.012, 0.012, 0.012);
            scene.add(model);

            mixer = new THREE.AnimationMixer(model);
            mixer.clipAction(gltf.animations[0]).play();

            animate();

        }, undefined, function (e) {

            console.error(e);

        });


        window.onresize = function () {

            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();

            renderer.setSize(window.innerWidth, window.innerHeight);

        };


        function animate() {
            requestAnimationFrame(animate);

            const delta = clock.getDelta();

            mixer.update(delta);

            controls.update();

            stats.update();
            stats.showPanel(0);

            renderer.render(scene, camera);
        }
    </script>
</body>
</html>