@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Three.js Example</title>
    <style>
        body {
            margin: 0;
        }

        canvas {
            display: block;
        }

        .welcome-section {
            text-align: center;
            margin-top: 50px;
        }
    </style>
</head>
<body>
    <center>
        <div class="welcome-section">
            <h1 class="display-4">Welcome</h1>
            <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
        </div>
    </center>
    <div id="container"></div>

    <div id="info">
        <a href="https://threejs.org" target="_blank" rel="noopener">three.js</a> webgl - animation - keyframes<br />
        Model: <a href="https://artstation.com/artwork/1AGwX" target="_blank" rel="noopener">Littlest Tokyo</a> by
        <a href="https://artstation.com/glenatron" target="_blank" rel="noopener">Glen Fox</a>, CC Attribution.
    </div>

    <!-- Include Stats.js library -->
    <script src="https://cdn.jsdelivr.net/npm/stats.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/controls/OrbitControls.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/loaders/OBJLoader.js"></script>

    <script>

        let mixer;

        const clock = new THREE.Clock();
        const container = document.getElementById('container');

        // Create a new instance of Stats
        const stats = new Stats();
        stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom
        document.body.appendChild(stats.dom);

        const renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(window.innerWidth, window.innerHeight);
        container.appendChild(renderer.domElement);

        const scene = new THREE.Scene();
        scene.background = new THREE.Color(0xdcdcdc); // Light gray color

        const camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 0.1, 100);
        camera.position.set(8, 4, 8);
        camera.lookAt(0, 1, 0);

        const controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.target.set(0, 1, 0);
        controls.update();
        controls.enablePan = false;
        controls.enableDamping = true;

        const loader = new THREE.OBJLoader();
        loader.load('@Url.Content("~/Assets/OfficeDesk.obj")', function (object) {
            console.log('OBJ loaded:', object);

            // Adjust object position, scale, etc. if needed
            object.position.set(0, 1, 0);
            object.scale.set(0.01, 0.01, 0.01);

            scene.add(object);

            animate();
        }, undefined, function (error) {
            console.error('Error loading OBJ:', error);
        });

        window.onresize = function () {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        };

        function animate() {
            requestAnimationFrame(animate);
            const delta = clock.getDelta();
            controls.update();
            stats.update(); // Update stats
            renderer.render(scene, camera);
        }
    </script>

</body>
</html>
